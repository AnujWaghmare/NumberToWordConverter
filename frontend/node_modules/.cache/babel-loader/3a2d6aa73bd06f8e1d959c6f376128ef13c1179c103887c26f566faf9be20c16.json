{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\n/**\n * Converts a number to words using the backend API.\n * @param {string} number - The number to convert.\n * @param {string} language - The target language ('english', 'hindi', 'marathi').\n * @returns {Promise<object>} - The JSON response from the API.\n */\nexport const convertNumberToWords = async (number, language) => {\n  const response = await fetch(`${API_BASE_URL}/api/convert/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      number,\n      language\n    })\n  });\n  const data = await response.json();\n  if (!response.ok) {\n    // Throw an error with the message from the API, so it can be caught in the component\n    throw new Error(data.error || \"An unknown error occurred.\");\n  }\n  return data;\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","convertNumberToWords","number","language","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","error"],"sources":["D:/miniproj/numtowordconversion/frontend/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\n/**\n * Converts a number to words using the backend API.\n * @param {string} number - The number to convert.\n * @param {string} language - The target language ('english', 'hindi', 'marathi').\n * @returns {Promise<object>} - The JSON response from the API.\n */\nexport const convertNumberToWords = async (number, language) => {\n  const response = await fetch(`${API_BASE_URL}/api/convert/`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ number, language }),\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    // Throw an error with the message from the API, so it can be caught in the component\n    throw new Error(data.error || \"An unknown error occurred.\");\n  }\n\n  return data;\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;EAC9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,eAAe,EAAE;IAC3DS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,MAAM;MAAEC;IAAS,CAAC;EAC3C,CAAC,CAAC;EAEF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;EAElC,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;IAChB;IACA,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,KAAK,IAAI,4BAA4B,CAAC;EAC7D;EAEA,OAAOJ,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}