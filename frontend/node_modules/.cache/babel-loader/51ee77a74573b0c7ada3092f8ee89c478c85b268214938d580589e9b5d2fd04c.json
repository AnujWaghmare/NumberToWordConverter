{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\n/**\n * Converts a number to words using the backend API.\n * @param {string} number - The number to convert.\n * @param {string} language - The target language ('english', 'hindi', 'marathi').\n * @returns {Promise<object>} - The JSON response from the API.\n */\nexport const convertNumberToWords = async (number, language) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/convert/`, {\n      number,\n      language\n    });\n    // axios returns the data directly in the `data` property\n    return response.data;\n  } catch (error) {\n    // axios wraps API errors in a specific structure\n    if (error.response && error.response.data && error.response.data.error) {\n      // Throw an error with the specific message from the backend\n      throw new Error(error.response.data.error);\n    }\n    // Handle network errors or other unexpected issues\n    throw new Error(error.message || 'An unknown network error occurred.');\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","convertNumberToWords","number","language","response","post","data","error","Error","message"],"sources":["D:/miniproj/numtowordconversion/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000';\n\n/**\n * Converts a number to words using the backend API.\n * @param {string} number - The number to convert.\n * @param {string} language - The target language ('english', 'hindi', 'marathi').\n * @returns {Promise<object>} - The JSON response from the API.\n */\nexport const convertNumberToWords = async (number, language) => {\n  try {\n    const response = await axios.post(`${API_BASE_URL}/api/convert/`, {\n      number,\n      language,\n    });\n    // axios returns the data directly in the `data` property\n    return response.data;\n  } catch (error) {\n    // axios wraps API errors in a specific structure\n    if (error.response && error.response.data && error.response.data.error) {\n      // Throw an error with the specific message from the backend\n      throw new Error(error.response.data.error);\n    }\n    // Handle network errors or other unexpected issues\n    throw new Error(error.message || 'An unknown network error occurred.');\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;;AAElF;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,QAAQ,KAAK;EAC9D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,GAAGR,YAAY,eAAe,EAAE;MAChEK,MAAM;MACNC;IACF,CAAC,CAAC;IACF;IACA,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd;IACA,IAAIA,KAAK,CAACH,QAAQ,IAAIG,KAAK,CAACH,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;MACtE;MACA,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACH,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IAC5C;IACA;IACA,MAAM,IAAIC,KAAK,CAACD,KAAK,CAACE,OAAO,IAAI,oCAAoC,CAAC;EACxE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}